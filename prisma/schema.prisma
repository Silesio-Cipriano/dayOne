// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Note {
  id               String           @id @default(uuid())
  title            String
  description      String
  image            String
  createAt         DateTime         @default(now())
  User             User             @relation(fields: [userId], references: [id])
  userId           String
  category         Category?        @relation(fields: [categoryId], references: [id])
  categoryId       String?
  status           Status_note_type @default(PRIVATE)
  Comment          Comment[]
  Reaction_note    Reaction_note[]
  reaction_EmojiId String

  @@map("notes")
}

model Reaction_Emoji {
  id    String @id @default(uuid())
  emoji String
}

model Reaction_note {
  id     String             @id @default(uuid())
  note   Note               @relation(fields: [noteId], references: [id])
  type   Reaction_note_type @default(LOVE)
  noteId String
  user   User               @relation(fields: [userId], references: [id])
  userId String
}

enum Reaction_note_type {
  LOVE
  LIKE
}

enum Status_note_type {
  PRIVATE
  PUBLIC
}

model Reaction_Comment {
  id        String                @id @default(uuid())
  type      Reaction_Comment_type @default(UP)
  comment   Comment               @relation(fields: [commentId], references: [id])
  user      User                  @relation(fields: [userId], references: [id])
  userId    String
  commentId String
}

enum Reaction_Comment_type {
  UP
  DOWN
}

model Comment {
  id          String @id @default(uuid())
  description String
  user        User   @relation(fields: [userId], references: [id])
  note        Note   @relation(fields: [noteId], references: [id])
  userId      String
  noteId      String

  commentedId      String?
  commented        Comment?           @relation("comments", fields: [commentedId], references: [id])
  comments         Comment[]          @relation("comments")
  Reaction_Comment Reaction_Comment[]

  @@map("comments_note")
}

model Category {
  id    String @id @default(uuid())
  title String
  Note  Note[]

  @@map("categories")
}

model User {
  id               String             @id @default(uuid())
  username         String
  name             String
  password         String
  email            String             @unique
  avatar           String
  birthday         String
  createAt         DateTime           @default(now())
  notes            Note[]
  Comment          Comment[]
  Reaction_note    Reaction_note[]
  Reaction_Comment Reaction_Comment[]

  @@map("users")
}
